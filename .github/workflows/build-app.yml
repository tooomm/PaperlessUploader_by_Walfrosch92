name: Build PaperlessUploader

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  Build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.10"]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
#        cache: 'pip'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
#        pip install -r requirements.txt

    - name: Build app
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          pyinstaller --noconsole --onefile --icon=MacOS/icon.icns MacOS/uploader.py
        fi
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          pyinstaller --noconsole --onefile --icon=Windows/paperless.ico Windows/uploader.py
        fi

#      pip install flake8 pytest
#
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings.
#        flake8 . --count --exit-zero --max-complexity=10 --statistics
#        
#    - name: Test with pytest
#      run: |
#        pytest

    - name: Print /dist folder content
      if: ${{ matrix.os == 'macos-latest' }}
      shell: bash
      run: ls ${{ github.workspace }}/dist

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: PaperlessUploader_${{ matrix.os }}
        path: ${{ github.workspace }}/dist/*    # only include files directly in the folder and ignore subfolders

#    - name: Upload to release
#      if: tagged release from main
